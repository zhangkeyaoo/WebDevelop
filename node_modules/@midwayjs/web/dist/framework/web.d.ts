import { BaseFramework, IMidwayBootstrapOptions, MidwayFrameworkType } from '@midwayjs/core';
import { IMidwayWebConfigurationOptions, Application, Context } from '../interface';
import { EggLogger } from 'egg';
export declare class MidwayWebFramework extends BaseFramework<Application, Context, IMidwayWebConfigurationOptions> {
    protected loggers: {
        [name: string]: EggLogger;
    };
    private generator;
    private server;
    private agent;
    private isClusterMode;
    private webRouterService;
    appDir: any;
    configure(): any;
    initSingleProcessEgg(): Promise<void>;
    applicationInitialize(options: Partial<IMidwayBootstrapOptions>): Promise<void>;
    overwriteApplication(processType: any): void;
    loadMidwayController(): Promise<void>;
    getFrameworkType(): MidwayFrameworkType;
    run(): Promise<void>;
    getLogger(name?: string): any;
    setContextLoggerClass(): void;
    generateMiddleware(middlewareId: any): Promise<any>;
    beforeStop(): Promise<void>;
    setServer(server: any): void;
}
//# sourceMappingURL=web.d.ts.map