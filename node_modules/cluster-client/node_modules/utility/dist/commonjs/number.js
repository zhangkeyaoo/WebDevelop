"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.random = exports.toSafeNumber = exports.isSafeNumberString = exports.MAX_SAFE_INTEGER_STR = exports.MIN_SAFE_INTEGER = exports.MAX_SAFE_INTEGER = void 0;
// http://www.2ality.com/2013/10/safe-integers.html
// http://es6.ruanyifeng.com/#docs/number
exports.MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;
exports.MIN_SAFE_INTEGER = -exports.MAX_SAFE_INTEGER;
exports.MAX_SAFE_INTEGER_STR = String(exports.MAX_SAFE_INTEGER);
const MAX_SAFE_INTEGER_STR_LENGTH = exports.MAX_SAFE_INTEGER_STR.length;
/**
 * Detect a number string can safe convert to Javascript Number.
 *
 * @param {String} s number format string, like `"123"`, `"-1000123123123123123123"`
 */
function isSafeNumberString(s) {
    if (s[0] === '-') {
        s = s.substring(1);
    }
    if (s.length < MAX_SAFE_INTEGER_STR_LENGTH ||
        (s.length === MAX_SAFE_INTEGER_STR_LENGTH && s <= exports.MAX_SAFE_INTEGER_STR)) {
        return true;
    }
    return false;
}
exports.isSafeNumberString = isSafeNumberString;
/**
 * Convert string to Number if string in safe Number scope.
 *
 * @param {String} s number format string.
 * @return {Number|String} success will return Number, otherwise return the original string.
 */
function toSafeNumber(s) {
    if (typeof s === 'number') {
        return s;
    }
    return isSafeNumberString(s) ? Number(s) : s;
}
exports.toSafeNumber = toSafeNumber;
/**
 * Produces a random integer between the inclusive `lower` and `upper` bounds.
 *
 * @param {Number} lower The lower bound.
 * @param {Number} upper The upper bound.
 * @return {Number} Returns the random number.
 */
function random(lower, upper) {
    // random()
    if (lower === undefined) {
        return 0;
    }
    // random(lower) => random(0, lower)
    if (upper === undefined) {
        upper = lower;
        lower = 0;
    }
    let temp;
    // random(upper, lower)
    if (lower > upper) {
        temp = lower;
        lower = upper;
        upper = temp;
    }
    return Math.floor(lower + Math.random() * (upper - lower));
}
exports.random = random;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnVtYmVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL251bWJlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxtREFBbUQ7QUFDbkQseUNBQXlDO0FBQzVCLFFBQUEsZ0JBQWdCLEdBQUcsTUFBTSxDQUFDLGdCQUFnQixJQUFJLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUNsRSxRQUFBLGdCQUFnQixHQUFHLENBQUMsd0JBQWdCLENBQUM7QUFDckMsUUFBQSxvQkFBb0IsR0FBRyxNQUFNLENBQUMsd0JBQWdCLENBQUMsQ0FBQztBQUM3RCxNQUFNLDJCQUEyQixHQUFHLDRCQUFvQixDQUFDLE1BQU0sQ0FBQztBQUVoRTs7OztHQUlHO0FBQ0gsU0FBZ0Isa0JBQWtCLENBQUMsQ0FBUztJQUMxQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQztRQUNqQixDQUFDLEdBQUcsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNyQixDQUFDO0lBQ0QsSUFBSSxDQUFDLENBQUMsTUFBTSxHQUFHLDJCQUEyQjtRQUN4QyxDQUFDLENBQUMsQ0FBQyxNQUFNLEtBQUssMkJBQTJCLElBQUksQ0FBQyxJQUFJLDRCQUFvQixDQUFDLEVBQUUsQ0FBQztRQUMxRSxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFDRCxPQUFPLEtBQUssQ0FBQztBQUNmLENBQUM7QUFURCxnREFTQztBQUVEOzs7OztHQUtHO0FBQ0gsU0FBZ0IsWUFBWSxDQUFDLENBQWtCO0lBQzdDLElBQUksT0FBTyxDQUFDLEtBQUssUUFBUSxFQUFFLENBQUM7UUFDMUIsT0FBTyxDQUFDLENBQUM7SUFDWCxDQUFDO0lBRUQsT0FBTyxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDL0MsQ0FBQztBQU5ELG9DQU1DO0FBRUQ7Ozs7OztHQU1HO0FBQ0gsU0FBZ0IsTUFBTSxDQUFDLEtBQWMsRUFBRSxLQUFjO0lBQ25ELFdBQVc7SUFDWCxJQUFJLEtBQUssS0FBSyxTQUFTLEVBQUUsQ0FBQztRQUN4QixPQUFPLENBQUMsQ0FBQztJQUNYLENBQUM7SUFDRCxvQ0FBb0M7SUFDcEMsSUFBSSxLQUFLLEtBQUssU0FBUyxFQUFFLENBQUM7UUFDeEIsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNkLEtBQUssR0FBRyxDQUFDLENBQUM7SUFDWixDQUFDO0lBQ0QsSUFBSSxJQUFZLENBQUM7SUFDakIsdUJBQXVCO0lBQ3ZCLElBQUksS0FBSyxHQUFHLEtBQUssRUFBRSxDQUFDO1FBQ2xCLElBQUksR0FBRyxLQUFLLENBQUM7UUFDYixLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ2QsS0FBSyxHQUFHLElBQUksQ0FBQztJQUNmLENBQUM7SUFDRCxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDO0FBQzdELENBQUM7QUFsQkQsd0JBa0JDIn0=